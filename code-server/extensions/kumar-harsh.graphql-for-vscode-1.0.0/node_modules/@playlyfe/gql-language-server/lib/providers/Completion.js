"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vscodeLanguageserver = require("vscode-languageserver");

var _helpers = require("../utils/helpers");

class Completion {
  constructor({
    documents,
    gqlService
  }) {
    this.documents = void 0;
    this.gqlService = void 0;
    this.documents = documents;
    this.gqlService = gqlService;
  }

  provideCompletionItems(params) {
    const doc = this.documents.get(params.textDocument.uri);

    if (!doc) {
      // @TODO: show some warning why document not found
      return {
        isIncomplete: false,
        items: []
      };
    }

    const items = this.gqlService.autocomplete({
      sourcePath: (0, _helpers.uriToFilePath)(params.textDocument.uri),
      sourceText: doc.getText(),
      position: (0, _helpers.lspPositionToGQLPosition)(params.position)
    });
    return {
      isIncomplete: false,
      items: items.map(({
        text,
        type,
        description
      }) => ({
        label: text,
        detail: type || '',
        kind: typeToKind(type),
        documentation: description || ''
      }))
    };
  }

}

exports.default = Completion;

function typeToKind(type) {
  switch (type) {
    case 'Scalar':
    case 'Union':
    case 'Input':
    case 'Object':
      return _vscodeLanguageserver.CompletionItemKind.Class;

    case 'Interface':
      return _vscodeLanguageserver.CompletionItemKind.Interface;

    case 'Enum':
      return _vscodeLanguageserver.CompletionItemKind.Enum;

    default:
      return _vscodeLanguageserver.CompletionItemKind.Field;
  }
}